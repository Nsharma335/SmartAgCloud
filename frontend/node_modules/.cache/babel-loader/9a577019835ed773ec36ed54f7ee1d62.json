{"ast":null,"code":"var _jsxFileName = \"/Users/amolkawade/Google Drive/Jerry Gao-281/CMPE281-SmartAgCloud/frontend/src/index.js\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home';\nimport AddCluster from './components/AddCluster';\nimport reducer from './store/reducer';\nimport { Provider } from 'react-redux';\nimport promise from \"redux-promise\"; //to work with redux dev tool\n\nvar composePlugin = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar createStoreWithMiddleware = applyMiddleware(promise)(createStore); //import createStore from redux\n//import Provider from react-redux\n//create a store and pass reducer as an argument\n//const store = createStore(reducer);\n\nvar store = createStore(reducer, composePlugin(applyMiddleware(promise)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/addcluster\",\n  component: AddCluster,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), \"dashboard\"))), document.getElementById('root'));","map":{"version":3,"sources":["/Users/amolkawade/Google Drive/Jerry Gao-281/CMPE281-SmartAgCloud/frontend/src/index.js"],"names":["BrowserRouter","Router","Route","createStore","applyMiddleware","compose","React","ReactDOM","Home","AddCluster","reducer","Provider","promise","composePlugin","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStoreWithMiddleware","store","render","document","getElementById"],"mappings":";AACA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,SAASC,WAAT,EAAqBC,eAArB,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CACA;;AAEA,IAAMC,aAAa,GAAGC,MAAM,CAACC,oCAAP,IAA+CV,OAArE;AACA,IAAMW,yBAAyB,GAAGZ,eAAe,CAACQ,OAAD,CAAf,CAAyBT,WAAzB,CAAlC,C,CACA;AACA;AAEA;AACA;;AACA,IAAMc,KAAK,GAAGd,WAAW,CAACO,OAAD,EAAUG,aAAa,CAACT,eAAe,CAACQ,OAAD,CAAhB,CAAvB,CAAzB;AAEAL,QAAQ,CAACW,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAID,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAET,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEA,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,aAAZ;AAA0B,EAAA,SAAS,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,cADJ,CAFR,CADJ,EAaIU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAbJ","sourcesContent":["\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { createStore,applyMiddleware,compose } from \"redux\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home';\nimport AddCluster from './components/AddCluster';\nimport reducer from './store/reducer';\nimport {Provider} from 'react-redux';\nimport promise from \"redux-promise\";\n//to work with redux dev tool\n\nconst composePlugin = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n//import createStore from redux\n//import Provider from react-redux\n\n//create a store and pass reducer as an argument\n//const store = createStore(reducer);\nconst store = createStore(reducer, composePlugin(applyMiddleware(promise)));\n\nReactDOM.render(\n    <Provider store = {store}>\n       \n            <Router>\n                <div>\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/addcluster\" component={AddCluster}/>\n                dashboard\n                </div>\n            </Router>\n \n    </Provider>\n    ,\n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}